/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cookie_store.proto */

#ifndef PROTOBUF_C_cookie_5fstore_2eproto__INCLUDED
#define PROTOBUF_C_cookie_5fstore_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Cs__Cookie Cs__Cookie;
typedef struct Cs__CookieJar Cs__CookieJar;


/* --- enums --- */


/* --- messages --- */

struct  Cs__Cookie
{
  ProtobufCMessage base;
  char *name;
  char *value;
  char *domain;
  char *path;
  protobuf_c_boolean secure;
  protobuf_c_boolean httponly;
  int64_t expirationtime;
};
#define CS__COOKIE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cs__cookie__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  Cs__CookieJar
{
  ProtobufCMessage base;
  size_t n_cookies;
  Cs__Cookie **cookies;
};
#define CS__COOKIE_JAR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cs__cookie_jar__descriptor) \
, 0,NULL }


/* Cs__Cookie methods */
void   cs__cookie__init
                     (Cs__Cookie         *message);
size_t cs__cookie__get_packed_size
                     (const Cs__Cookie   *message);
size_t cs__cookie__pack
                     (const Cs__Cookie   *message,
                      uint8_t             *out);
size_t cs__cookie__pack_to_buffer
                     (const Cs__Cookie   *message,
                      ProtobufCBuffer     *buffer);
Cs__Cookie *
       cs__cookie__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cs__cookie__free_unpacked
                     (Cs__Cookie *message,
                      ProtobufCAllocator *allocator);
/* Cs__CookieJar methods */
void   cs__cookie_jar__init
                     (Cs__CookieJar         *message);
size_t cs__cookie_jar__get_packed_size
                     (const Cs__CookieJar   *message);
size_t cs__cookie_jar__pack
                     (const Cs__CookieJar   *message,
                      uint8_t             *out);
size_t cs__cookie_jar__pack_to_buffer
                     (const Cs__CookieJar   *message,
                      ProtobufCBuffer     *buffer);
Cs__CookieJar *
       cs__cookie_jar__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cs__cookie_jar__free_unpacked
                     (Cs__CookieJar *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cs__Cookie_Closure)
                 (const Cs__Cookie *message,
                  void *closure_data);
typedef void (*Cs__CookieJar_Closure)
                 (const Cs__CookieJar *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cs__cookie__descriptor;
extern const ProtobufCMessageDescriptor cs__cookie_jar__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cookie_5fstore_2eproto__INCLUDED */
